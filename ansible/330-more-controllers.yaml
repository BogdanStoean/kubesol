---
- 
  hosts: controller
  serial: 1
  gather_facts: no
  vars:
    - CONFIG_FILE: /etc/rancher/rke2/config.yaml

  tasks:
  - name: get the token
    shell: cat /var/lib/rancher/rke2/server/node-token
    delegate_to: "{{ groups['controller_one'][0] }}"
    register: TOKEN
    changed_when: False    
    run_once: True

  - name: create directories
    file:
      path: "{{ item }}"
      state: directory
      owner: root
      group: root
      recurse: yes
    loop:
      - /etc/rancher/rke2
      - /var/lib/rancher/rke2/server/manifests

  - name: get hostname short
    shell: |
      hostname -s
    register: hostname_short
    changed_when: False

  - name: hostname fqdn
    shell: |
      hostname -f
    register: hostname_fqdn
    changed_when: False

  - name: Print hostname fqdn and short
    debug:
      msg:
      - "hostname short '{{ hostname_short.stdout }}'"
      - "hostname fqdn: '{{ hostname_fqdn.stdout }}'"
      - "token: '{{ TOKEN.stdout }}'"

  - name: Creating the config.yaml
    copy:
      dest: "{{ CONFIG_FILE }}"
      content: |
        token: {{ TOKEN.stdout }}
        server: https://{{ hosts_gw }}:9345
        tls-san:
          - "{{ hostname_short.stdout }}"
          - "{{ hostname_fqdn.stdout }}"
          - "{{ hosts_gw }}"
          - "{{ ext_dns_name }}"
        cni: "cilium"
        {% if controller_worker is not defined %}
        node-taint:
          - "CriticalAddonsOnly=true:NoExecute"
        {% endif %}
    notify: "rke2-server service restart"

  - name: download rke2.sh
    get_url:
      url: https://get.rke2.io
      dest: /root/rke2.sh
      mode: '0700'

  - name: Installing rke2 server
    shell: ./rke2.sh
    environment: 
      INSTALL_RKE2_VERSION: "{{ rke2_version|default('') }}"

  - name: Starting rke2 server
    systemd:
      name: rke2-server
      state: restarted
      enabled: true

  - name: kubeconfig directory
    file:
      path: /root/.kube
      state: directory
      mode: '0700'

  - name: kubeconfig link
    file:
      dest: /root/.kube/config
      src: /etc/rancher/rke2/rke2.yaml 
      state: link

  - name: kubectl binary
    file:
      dest: /usr/local/bin/kubectl
      src: /var/lib/rancher/rke2/bin/kubectl
      state: link

  handlers:
    - name: Make sure a service unit is restarted
      systemd:
        name: rke2-server
        state: restarted
        enabled: true
      listen: "rke2-server service restart"

